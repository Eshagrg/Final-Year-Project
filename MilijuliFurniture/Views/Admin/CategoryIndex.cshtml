@model IEnumerable<Site.DataAccess.Domain.Category>;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    Layout = "AdminLayout/_AdminLayout";

}
@section Css {
    <link href="~/css/page/customedatatable.css" rel="stylesheet" />
}}
}
<style>
    .toast {
        position: fixed;
        top: 0%%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1050;
        max-width: 100%;
        width: 400px; /* Adjust width as needed */
        pointer-events: none; /* Allow clicks to pass through */
    }

    .toast-body {
        width: 100%;
        overflow-wrap: break-word;
    }

    /* Optional: Adjust appearance */
    .toast-header {
        background-color: #fff;
        color: #fff;
    }


</style>

<!-- The Add Category Modal -->
<div id="addCategoryModal" class="modal fade">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Localizer["Add Category"]</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
             
                <form id="addCategoryForm">
                    <div class="form-group">
                        <label for="categoryName">@Localizer["New Category:"]</label>
                        <input type="text" id="categoryName" name="categoryName" class="form-control" required placeholder="Enter your new category here">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@Localizer["Cancel"]</button>
                <button type="submit" form="addCategoryForm" class="btn btn-primary">"Add Category"</button>
            </div>
        </div>
    </div>
</div>
<!-- The Update Category Modal -->
<div id="changeCategoryModal" class="modal fade">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Localizer["Update Category"]</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="id" name="id" value="" />
                <p><strong>@Localizer["Recent Category Name:"]</strong><span id="categoryName"></span></p>
                <form id="changeCategoryForm">
                    <div class="form-group">
                        <label for="newPassword">@Localizer["Update Category:"]</label>
                        <input type="text" id="newCategory" name="newCategory" class="form-control" required placeholder="@Localizer["Update your category name here"]">
                    </div>
                    @*     <div class="form-group">
                    <label for="confirmNewPassword">Confirm New Password:</label>
                    <input type="password" id="confirmNewPassword" name="confirmNewPassword" class="form-control" required>
                    </div> *@
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@Localizer["Cancel"]</button>
                <button type="submit" form="changeCategoryForm" class="btn btn-primary">@Localizer["Update Category"]</button>
            </div>
        </div>
    </div>
</div>
<div class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-delay="2000">
    <div class="toast-header">
        <strong class="mr-auto">Success</strong>
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="toast-body">
        Category updated successfully!
    </div>
</div>

<section class="section">
    <div class="section-header">
        <h1>@Localizer["Categories"]</h1>
        <div class="section-header-breadcrumb">
            <div class="breadcrumb-item active"><a href="#">@Localizer["Dashboard"]</a></div>
            <div class="breadcrumb-item">@Localizer["Category"]</div>
        </div>
    </div>

    <div class="section-body">
        <div class="row">
            <div class="col-12 col-md-6 col-lg-12">
                <div class="card">
                    <div class="card-header">

                        <button class="btn btn-primary" onclick="openChangePasswordModal()">@Localizer["Add Category"]</button>
                      
                    </div>
                    <div class="card-body table-responsive">
                        <table class="display table" id="example">
                            <thead>
                                <tr>
                                    <th scope="col">ID</th>
                                    <th scope="col">@Localizer["Category Name"]</th>
                          
                                    <th scope="col">@Localizer["Action"]</th>
                          
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int sn = 1;
                                }

                                @foreach (var @item in Model)
                                {
                                    <tr>
                                        <td scope="col">@sn</td>
                                        <td scope="col">@item.Name</td>

                                        <td scope="col">
                                            
                                                <span class="btn-group">
                                                    <button class="btn btn-primary" onclick="openChangeCategoryModal('@item.Id', '@item.Name')">@Localizer["Update"]</button>
                                                </span>
                                            <span class="btn-group">
                                                <button class="btn btn-primary text-white" onclick="confirmDelete('@item.Id')">@Localizer["Delete"]</button>
                                            </span>

                                            
                                        </td>
                                    </tr>
                                    sn++;
                      @*           
                                <!-- Delete Modal -->
                                    <div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmationModalLabel" aria-hidden="true">
                                        <div class="modal-dialog modal-dialog-centered" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="confirmationModalLabel">Confirmation</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body">
                                                    Are you sure you want to delete this category?
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">@Localizer["Cancel"]</button>
                                                    <a asp-controller="Admin" asp-action="DeleteCategory" asp-route-id="@item.Id" class="btn btn-danger">@Localizer["Delete"]</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div> *@
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
    
</section>

@section Script {
    <script>
       
        function openChangePasswordModal() {
            // Show the change password modal

            $('#addCategoryModal').modal('show');
        }

        // Submit the form within the modal using AJAX
        $('#addCategoryForm').submit(function (e) {
            e.preventDefault(); // Prevent the form from submitting normally

            // Get the form data
            var formData = {
                categoryName: $('#categoryName').val(),
            };
            // Send the form data to the server using AJAX
            $.ajax({
                url: '/Admin/AddCategory', // Update the URL to match the correct controller action
                method: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        toastr.success("", "Category Added Succesgully");
                  
                        // Close the modal after successful password change
                        $('#addCategoryModal').modal('hide');
                        location.reload(); 
                    } else {
                        alert('Failed to add category. Please try again later.');
                    }
                },
                error: function () {
                    alert('An error occurred while adding category. Please try again later.');
                }
            });
        });

        $(function () {
            $('#example thead tr')
                //.clone(true)
                .addClass('filters')
                .appendTo('#example thead');

            var table = $('#example').DataTable({
                scrollX: false,
                orderCellsTop: true,
                fixedHeader: true,
                pagingType: 'simple', // Use simple pagination controls (only previous and next buttons)
                initComplete: function () {
                    var api = this.api();

                    // For each column
                    api
                        .columns()
                        .eq(0)
                        .each(function (colIdx) {
                            // Set the header cell to contain the input element
                            var cell = $('.filters th').eq(
                                $(api.column(colIdx).header()).index()
                            );
                            var title = $(cell).text();
                            $(cell).html('<input type="text" placeholder="' + title + '" />');

                            // On every keypress in this input
                            $(
                                'input',
                                $('.filters th').eq($(api.column(colIdx).header()).index())
                            )
                                .off('keyup change')
                                .on('change', function (e) {
                                    // Get the search value
                                    $(this).attr('title', $(this).val());
                                    var regexr = '({search})'; //$(this).parents('th').find('select').val();

                                    var cursorPosition = this.selectionStart;
                                    // Search the column for that value
                                    api
                                        .column(colIdx)
                                        .search(
                                            this.value != ''
                                                ? regexr.replace('{search}', '(((' + this.value + ')))')
                                                : '',
                                            this.value != '',
                                            this.value == ''
                                        )
                                        .draw();
                                })
                                .on('keyup', function (e) {
                                    e.stopPropagation();

                                    $(this).trigger('change');
                                    $(this)
                                        .focus()[0]
                                        .setSelectionRange(cursorPosition, cursorPosition);
                                });
                        });
                },
                columns: [
                    { data: "#" },
                    { data: "@Localizer["Category Name"]" },
                    { data: "@Localizer["Action"]" },
                ]
            });
        })
        function confirmDelete(categoryId) {
            swal({
                title: 'Are you sure?',
                text: 'You will not be able to recover this category!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, cancel!',
                dangerMode: true,
            }, function (confirmed) {
                if (confirmed) {
                    // If the user confirms, proceed with the deletion
                    window.location.href = '/Admin/DeleteCategory/' + categoryId;
                }
            });
        }

        function openChangeCategoryModal(Id, name) {
            // Show the change password modal
            $('#id').val(Id);
            $('#categoryName').text(name);
            $('#changeCategoryModal').modal('show');
        }

        // Submit the form within the modal using AJAX
        $('#changeCategoryForm').submit(function (e) {
            console.log("hi");
            e.preventDefault(); // Prevent the form from submitting normally

            // Get the form data
            var formData = {
                Id: $('#id').val(),
                obj: $('#newCategory').val(),
            };
            // Send the form data to the server using AJAX
            $.ajax({
                url: '/Admin/UpdateCategory', // Update the URL to match the correct controller action
                method: 'POST',
                data: formData,
                success: function () {

                    $('#changeCategoryModal').modal('hide');
                    $('.toast').toast('show');
                },
                error: function () {
                    alert('An error occurred while updating category. Please try again later.');
                }
            });
        });
    </script>

}
